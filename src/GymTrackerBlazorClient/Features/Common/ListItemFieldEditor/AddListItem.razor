@if (!_showAddItem)
{
    <MudIconButton 
        Icon="@Icons.Material.Filled.AddCircle" 
        Size="Size.Medium"
        Style="@($"color: {Theme.Palette.InfoContrastText}")"
        @onclick="() => _showAddItem = true">
    </MudIconButton>
} 
else
{
    <MudChip Color="Color.Info">
        <input
            type="text" 
            style="@($"background: transparent; border: solid 1px {Theme.Palette.LinesInputs}; color:{Theme.Palette.InfoContrastText}")"
            @bind="_newItem" @bind:event="oninput" />
        <MudIconButton
            Class="ml-1"
            Style="color: white"
            Icon="@Icons.Material.Filled.CheckCircle"
            Size="Size.Small"
            Disabled="string.IsNullOrWhiteSpace(_newItem)"
            @onclick="HandleAddBodyTarget"></MudIconButton>
        <MudIconButton
            Class="ml-1"
            Style="color: white"
            Icon="@Icons.Material.Filled.Cancel"
            Size="Size.Small"
        @onclick="() => _showAddItem = false">
        </MudIconButton>
    </MudChip>
}

@code {
    [Parameter, EditorRequired]
    public EventCallback<string> OnAddItem { get; set; }

    bool _showAddItem = false;
    string _newItem = "";
    MudTheme Theme = new();

    void HandleAddBodyTarget(){
        OnAddItem.InvokeAsync(_newItem);
        _showAddItem = false;
        _newItem = string.Empty;
    }
}
