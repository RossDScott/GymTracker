@using System.Collections.Immutable;
@using GymTracker.BlazorClient.Features.Common;

<div class="fullHeight" style="position: relative">
    <MudPaper Class="pa-0 fullHeight" style="overflow-y: auto; position: relative;">
        @Filter
        <MudList 
            Class="z-0"
            Color="Color.Info"
            Clickable="true"
            SelectedValue="SelectedId">
            @foreach (var item in List)
            {
                <MudListItem 
                    OnClick="() => OnItemClick.InvokeAsync(item)"
                    Value="item.Id"
                    Style="@(item.IsAcitve ? "" : $"color: {Theme.PaletteDark.TextDisabled}")">
                    <MudText Typo="Typo.subtitle1">@item.Name</MudText>
                </MudListItem>
            }
        </MudList>
    </MudPaper>
    <div class="d-flex flex-row-reverse" style="position: absolute; bottom: 15px; right: 15px">
        <MudFab 
            Color="Color.Dark"
            StartIcon="@Icons.Material.Filled.Add"
            OnClick="_ => OnAddItem.InvokeAsync()" />
    </div>
</div>



@code {
    [Parameter]
    public RenderFragment? Filter { get; set; }

    [Parameter, EditorRequired]
    public ImmutableArray<ListItem> List { get; set; } = ImmutableArray<ListItem>.Empty;

    [Parameter]
    public EventCallback<ListItem> OnItemClick { get; set; }

    [Parameter]
    public Guid? SelectedId { get; set; } = null;

    [Parameter]
    public EventCallback OnAddItem { get; set; }

    MudTheme Theme = new();
}
