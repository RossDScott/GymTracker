@using GymTracker.BlazorClient.Features.History.WorkoutHistory.Store
@using GymTracker.BlazorClient.Features.Home.Store
@using GymTracker.Domain.Models
@using GymTracker.Domain.Models.Extensions
@using GymTracker.Domain.Models.Statistics

@inherits FluxorComponent

@inject NavigationManager NavigationManager
@inject IState<HomeState> State
@inject IDispatcher Dispatcher

<div class="fullHeight" style="overflow-y: auto">
    @foreach(var historyItem in State.Value.CompletedWorkouts)
    {
        <MudPaper Class="pa-3 mb-2" Elevation="1" @onclick="() => HandleViewHistory(historyItem.WorkoutPlanId)">
            <div class="d-flex justify-space-between">
                <MudText Typo="Typo.subtitle1">@historyItem.CompletedOn.ToString("dd/MM/yy HH:mm")</MudText>
                <MudText Typo="Typo.subtitle1">@historyItem.WorkoutPlanName</MudText>
            </div>
            
            <div>
                @foreach(var exercise in historyItem.Exercises)
                {
                    <div class="d-flex justify-space-between">
                        <MudText Typo="Typo.subtitle2">@exercise.ExerciseName</MudText>
                        @if(exercise.AnyCompleted)
                        {
                            <MudText Typo="Typo.subtitle2">@exercise.MaxSet?.GetMeasureText(exercise.MetricType)</MudText>
                        }
                        else
                        {
                            <MudText Typo="Typo.subtitle2">Not completed</MudText>
                        }

                    </div>
                }
            </div>
            @TotalMeasure(historyItem)
        </MudPaper>
    }
</div>

@code {
    RenderFragment TotalMeasure(WorkoutStatistic workout) => workout.IsRepsOnly
        ?@<div class="d-flex justify-space-between">
            <MudText Typo="Typo.subtitle2">Total</MudText>
            <MudText Typo="Typo.subtitle2">@workout.TotalReps @MetricType.Reps.ToMetricDescription()</MudText>
        </div>
        :@<div class="d-flex justify-space-between">
            <MudText Typo="Typo.subtitle2">Total Volume</MudText>
            <MudText Typo="Typo.subtitle2">@workout.TotalWeightVolumeWithMeasure</MudText>
        </div>;
        

    void HandleViewHistory(Guid workoutPlanId) => Dispatcher.Dispatch(new ViewWorkoutHistoryAction(workoutPlanId));
}