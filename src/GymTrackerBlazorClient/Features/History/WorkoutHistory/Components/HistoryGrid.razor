@using GymTracker.BlazorClient.Features.History.WorkoutHistory.Store
@inherits FluxorComponent
@inject IState<WorkoutHistoryState> State
@inject IDispatcher Dispatcher

<div class="d-flex flex-column justify-space-between fullHeight fullWidth">
    <table class="mt-3 mb-auto fullWidth">
        <thead>
            <tr>
                <th>Exercise</th>
                <th>Set</th>
                @foreach (var date in State.Value.PagedDates)
                {
                    <th>@date.ToString(@"dd/MM/yy")</th>
                }
            </tr>
        </thead>
        <tbody>
            @foreach (var exercise in State.Value.Exercises)
            {
                @foreach (var set in exercise.SetNames.Select((name, index) => (name, index)))
                {
                    <tr>
                        @if(set.index == 0)
                        {
                            <td class="boldCell" rowspan="@(exercise.SetNames.Length +1)">@exercise.ExerciseName</td>
                        }
                    
                        <td>@set.name</td>

                        @foreach (var date in State.Value.PagedDates)
                        {
                            var setRecord = exercise.Records
                                                    .FirstOrDefault(x => x.Date == date)?
                                                    .Sets.SingleOrDefault(x => x.SetName == set.name);

                            <td>@setRecord?.Measure</td>
                        }
                    </tr>
                }
                <tr class="boldCell">
                    <td>Total</td>
                    @foreach (var date in State.Value.PagedDates)
                    {
                        var dateRecord = exercise.Records.FirstOrDefault(x => x.Date == date);

                        <td>@dateRecord?.TotalVolume</td>
                    }
                </tr>
            }
        </tbody>
    </table>

    <div class="d-flex flex-column align-center fullWidth mt-2">
        <MudPagination Color="Color.Primary" 
                       Count="@(State.Value.PageCount)" 
                       Selected="@State.Value.SelectedPage"
                       SelectedChanged="HandleSetPage" />
    </div>
</div>
<style>
    table, th, td {
        border: 1px solid;
        padding: 4px;
    }
    table{
        border-collapse: collapse;
        width: 100%
    }
    thead{
        font-weight: bold;
    }

    .boldCell{
        font-weight: bold;
    }
</style>

@code {
    void HandleSelectWorkoutPlan(Guid id) => Dispatcher.Dispatch(new SetWorkoutPlanIdAction(id));
    void HandleSetPage(int page) => Dispatcher.Dispatch(new SetPageAction(page));
}