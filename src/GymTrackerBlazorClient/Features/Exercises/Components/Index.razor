@page "/exercises";

@using GymTracker.BlazorClient.Features.AppBar.Store;
@using GymTracker.BlazorClient.Features.Common.FullHeightList;
@using GymTracker.BlazorClient.Features.Exercises.Store;
@using GymTracker.BlazorClient.Features.Common;

@inherits FluxorComponent

@inject NavigationManager NaviagationManager
@inject IState<ExercisesState> State
@inject IDispatcher Dispatcher

<MudGrid Class="fullHeight ma-0" Justify="Justify.SpaceEvenly" Style="width: 100%">
    <MudItem xs="4" Class=" mb-0 fullHeight" Style="position: relative">
        <FullHeightList 
            List="State.Value.Exercises"
            SelectedId="State.Value.SelectedExercise?.Id"
            OnItemClick="HandleExerciseSelected"
            OnAddItem="HandleAddNewExercise">
            <Filter>
                <ExercisesFilter></ExercisesFilter>
            </Filter>
        </FullHeightList>
    </MudItem>
    <MudItem xs="4" Class="">
        @if(State.Value.SelectedExercise is not null)
        {
            <Exercise
                TargetBodyParts="State.Value.TargetBodyParts"
                Equipment="State.Value.Equipment"
                ExerciseDetail="State.Value.SelectedExercise"
                OnExerciseUpdated="HandleUpdateExercise">
            </Exercise>
        }
    </MudItem>
    <MudItem xs="4" Class="">
        @if(State.Value.SelectedExercise is not null)
        {
            <MudPaper Class="pa-16" Elevation="3">
                This is where the records and charts will be
            </MudPaper>            
        }
    </MudItem>
</MudGrid>

@code {
    MudTheme Theme = new();

    protected override void OnInitialized()
    {
        Dispatcher.Dispatch(new FetchExercisesAction());

        base.OnInitialized();
    }

    void HandleExerciseSelected(ListItem item) 
        => Dispatcher.Dispatch(new FetchExerciseAction(item.Id));

    void HandleAddNewExercise() =>
        Dispatcher.Dispatch(new CreateNewExerciseAction());

    void HandleUpdateExercise(DetailItem updateDTO) =>
        Dispatcher.Dispatch(new UpsertExerciseAction(updateDTO));
}