@using GymTracker.BlazorClient.Features.Exercises.Store;
@inject IDispatcher Dispatcher

<MudChip Color="Color.Info">
    @if (!showAddTarget)
    {
        <MudIconButton 
            Icon="@Icons.Material.Filled.AddCircle" 
            Size="Size.Small"
            Style="color: white"
            @onclick="() => showAddTarget = true">
        </MudIconButton>
    }

    @if (showAddTarget)
    {
        <input
            type="text" 
            style="background: transparent;"
            @bind="newBodyTarget" @bind:event="oninput" />
        <MudIconButton
            Class="ml-1"
            Style="color: white"
            Icon="@Icons.Material.Filled.CheckCircle"
            Size="Size.Small"
            Disabled="string.IsNullOrWhiteSpace(newBodyTarget)"
            @onclick="HandleAddBodyTarget"></MudIconButton>
        <MudIconButton
            Class="ml-1"
            Style="color: white"
            Icon="@Icons.Material.Filled.Cancel"
            Size="Size.Small"
            @onclick="() => showAddTarget = false">
        </MudIconButton>
    }

</MudChip>

@code {
    [Parameter, EditorRequired]
    public EventCallback<string> OnAddBodyTarget { get; set; }

    bool showAddTarget = false;
    string newBodyTarget = "";

    void HandleAddBodyTarget(){
        OnAddBodyTarget.InvokeAsync(newBodyTarget);
        showAddTarget = false;
        newBodyTarget = "";
    }
}
