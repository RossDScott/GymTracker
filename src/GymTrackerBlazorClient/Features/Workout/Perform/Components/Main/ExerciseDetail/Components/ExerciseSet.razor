@using GymTracker.BlazorClient.Features.Workout.Perform.Components.Main.ExerciseDetail.Store
@inject IDispatcher Dispatcher

<div @onclick="handleEditRow"
     @onclick:stopPropagation="true"
     class="row @selectedClass">
    <MudGrid Class="fullWidth ma-0">
    <MudItem xs="2" class="fw-bold">@Set.Name</MudItem>

    @(IsSelected ? @EditRow(editSet) : @ViewRow(Set))

    <MudItem xs="1" class="text-center">
        <i class="bi @completedCircleClass" @onclick="handleToggleCompleted" @onclick:stopPropagation="true"></i>
    </MudItem>
</MudGrid>
</div>


    @code {
    [Parameter, EditorRequired]
    public RenderFragment<Set> ViewRow { get; set; } = null!;
    [Parameter, EditorRequired]
    public RenderFragment<EditSet> EditRow { get; set; } = null!;

    [Parameter, EditorRequired]
    public Set Set { get; set; } = default!;
    [Parameter, EditorRequired]
    public bool IsSelected { get; set; }

    private EditSet editSet = default!;

    private string selectedClass => IsSelected ? "selected" : "";
    private string completedCircleClass => Set.Completed ? "bi-check-circle" : "bi-circle";

    protected override void OnParametersSet()
    {
        editSet = new EditSet(Set);
    }

    private void handleEditRow()
    {
        Dispatcher.Dispatch(new SetSelectedSetAction(Set.Id));
    }

    private void handleToggleCompleted() => Dispatcher.Dispatch(new ToggleSetCompletedAction(Set.Id));
}