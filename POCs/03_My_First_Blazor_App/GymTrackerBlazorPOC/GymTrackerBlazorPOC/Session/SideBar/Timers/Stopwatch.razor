@using System.Timers;
@inject SessionData sessionData

<span className="fw-semibold">Stopwatch</span>
<h1>@duration.ToString(@"mm\:ss\:fff")</h1>
<div class="d-flex">
    <ControlButtons
        CanPause="true"
        IsPaused="@(pausedDuration is not null && startTime is null)"
        IsRunning="@(startTime is not null)"
        OnStart="@handleStart"
        OnPause="@handlePause"
        OnReset="@handleReset">
    </ControlButtons>
</div>

@code {
    public DateTime? startTime = null;
    private TimeSpan duration = TimeSpan.FromMilliseconds(0);
    private TimeSpan? pausedDuration = null;

    private Timer timer = new(1);

    protected override void OnInitialized()
    {
        timer.Elapsed += (sender, eventArgs) => OnTimerCalculateDuration();
        timer.Start();
    }

    private void OnTimerCalculateDuration()
    {
        if (startTime is null)
            return;

        duration = DateTime.Now.Subtract(startTime.Value);

        if (pausedDuration is not null)
            duration = duration.Add(pausedDuration.Value);

        StateHasChanged();
    }

    private void handleStart() => startTime = DateTime.Now;
    private void handlePause()
    {
        pausedDuration = duration;
        startTime = null;
    }
    private void handleReset()
    {
        startTime = null;
        pausedDuration = null;
        duration = TimeSpan.FromMilliseconds(0);
    }

    public void Dispose() => timer.Dispose();
}
