@using GymTrackerBlazorFluxorPOC.Session.Components.Main.Components.ExerciseDetail.Store
@inject IDispatcher Dispatcher

<div class="row d-flex align-items-center align-self-center" 
    @onclick="handleEditRow" 
    @onclick:stopPropagation="true">
    <div class="col fw-bold">@Set.Name</div>
    
    @(IsSelected ? @EditRow(editSet) : @ViewRow(Set))

    <div class="col-1 text-center">
        <i class="bi @completedCircleClass" @onclick="handleToggleCompleted" @onclick:stopPropagation="true"></i>
    </div>
</div>

@code {
    [Parameter, EditorRequired]
    public RenderFragment<Set> ViewRow { get; set; } = null!;
    [Parameter, EditorRequired]
    public RenderFragment<EditSet> EditRow { get; set; } = null!;

    [Parameter, EditorRequired]
    public Set Set { get; set; } = default!;
    [Parameter, EditorRequired]
    public bool IsSelected { get; set; }

    private EditSet editSet = default!;

    private string completedCircleClass => Set.Completed ? "bi-check-circle" : "bi-circle";

    private void handleEditRow(){
        editSet = new EditSet(Set);
        Dispatcher.Dispatch(new SetSelectedSetAction(Set.Id));
    }

    private void handleToggleCompleted() => Dispatcher.Dispatch(new ToggleSetCompletedAction(Set.Id));
}
