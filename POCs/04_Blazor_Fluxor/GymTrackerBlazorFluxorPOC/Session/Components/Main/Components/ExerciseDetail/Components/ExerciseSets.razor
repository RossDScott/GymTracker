@using GymTrackerBlazorFluxorPOC.Session.Components.Main.Components.ExerciseDetail.Components.WeightSet
@using GymTrackerBlazorFluxorPOC.Session.Components.Main.Components.ExerciseDetail.Store
@inherits FluxorComponent

@inject IState<ExerciseDetailState> State
@inject IDispatcher Dispatcher

<div class="container-fluid">
    <div class="row fw-bold">
        <div class="col"></div>
        <div class="col-3 text-center ps-5 me-3">Target</div>
        <div class="col-3 text-center ps-5 me-3">Actual</div>
        <div class="col-1"></div>
    </div>
    <div class="row fw-bold">
        <div class="col"></div>
        <div class="col-2 text-center p-0">Weight</div>
        <div class="col-1 text-center p-0 me-3">Reps</div>
        <div class="col-2 text-center p-0">Weight</div>
        <div class="col-1 text-center p-0 me-3">Reps</div>
        <div class="col-1 text-center"></div>
    </div>

    @if(State.Value.MetricType == Models.MetricType.Weight)
    {
        @foreach(var set in State.Value.Sets)
        {
            <ExerciseSet Set="set" IsSelected="State.Value.SelectedSetId == set.Id">
                <ViewRow Context="viewWeightSet">
                    <ViewWeightSet Set="viewWeightSet"></ViewWeightSet>
                </ViewRow>
                <EditRow Context="editWeightSet">
                    <EditWeightSet EditSet="editWeightSet"></EditWeightSet>
                </EditRow>
            </ExerciseSet>
        }
    }
    
    <div class="row">
        <div class="col-11"></div>
        <div class="col text-center">
            <i class="bi bi-plus-circle-fill"></i>
        </div>
    </div>
</div>

@code {

}
