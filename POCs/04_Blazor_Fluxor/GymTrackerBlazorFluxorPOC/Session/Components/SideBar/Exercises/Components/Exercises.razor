@using GymTrackerBlazorFluxorPOC.Session.Store
@using GymTrackerBlazorFluxorPOC.Session.Components.SideBar.Exercises.Store
@inherits FluxorComponent

@inject IDispatcher Dispatcher
@inject IState<ExercisesState> State
@inject IJSRuntime JS;

<ul class="list-group list-group-flush me-1">
    @foreach (var item in State.Value.Exercises)
    {
        @renderExerciseRow(item)
    }
</ul>
@*<AddExercise OnAdd="(exercise) => sessionData.AddExercise(exercise)"></AddExercise>*@

@code {
    RenderFragment renderExerciseRow(SessionExercise exercise) =>
        @<li class="list-group-item @(exercise.Id == State.Value.SelectedSessionExerciseId ? "fw-bold" : "")"
            @onclick="() => Dispatcher.Dispatch(new SetSelectedExerciseAction(exercise!))">
            @exercise.Name
        </li>;
}

@code {
    protected override Task OnInitializedAsync()
    {
        Dispatcher.Dispatch(new LoadExercisesAction());

        return base.OnInitializedAsync();
    }
}